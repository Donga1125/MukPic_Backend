name: Server Deploy

on:
  push:
    branches: [dev]
    paths:
      - 'mukpic/**'

jobs:
  server:
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY: ${{secrets.AWS_ACCESS_KEY}}
      AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
      #JWT_SECRET_KEY: ${{secrets.JWT_SECRET_KEY}}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'zulu'

      - name: Grant execute permission for gradlew
        working-directory: ./server
        run: chmod +x gradlew

      - name: Build with Gradle
        working-directory: ./server
        run: ./gradlew build

      - name: Set up Docker tag
        id: docker_tag
        run: |
          # Fetch the latest tag from Docker Hub
          latest_tag=$(curl -s -u "${{ secrets.DOCKER_HUB_USERNAME }}:${{ secrets.DOCKER_HUB_PASSWORD }}" \
            "https://hub.docker.com/v2/repositories/${{ secrets.DOCKER_HUB_USERNAME }}/mukpic-server/tags" \
            | jq -r '.results | map(.name) | map(select(test("^v[0-9]+$"))) | sort | last')

          # Increment the tag version
          if [[ $latest_tag =~ ^v([0-9]+)$ ]]; then
            new_version=$((BASH_REMATCH[1] + 1))
          else
            new_version=1
          fi

          # Save the new tag to environment variables
          echo "new_tag=v$new_version" >> $GITHUB_ENV

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Docker build and push
        run: |
          docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_PASSWORD }}
          cd server
          docker build -t mukpic-server .
          docker tag mukpic-server ${{ secrets.DOCKER_HUB_USERNAME }}/mukpic-server:${{ env.new_tag }}
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/mukpic-server:${{ env.new_tag }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: ap-northeast-2

      - name: Check if container exists
        run: |
          if docker ps -a --format '{{.Names}}' | grep -q '^mukpic-server$'; then
            docker rm -f mukpic-server
          fi
        continue-on-error: true

      - name: Run scripts in server
        uses: appleboy/ssh-action@master
        with:
          key: ${{secrets.EC2_KEY}}
          host: ${{secrets.EC2_HOST}}
          username: ec2-user
          port: ${{secrets.EC2_PORT}}
          script: |
            whoami
            sudo docker login -u ${{secrets.DOCKER_HUB_USERNAME}} -p ${{secrets.DOCKER_HUB_PASSWORD}}
            sudo docker pull ${{secrets.DOCKER_HUB_USERNAME}}/mukpic-server:${{ env.new_tag }}
            sudo docker-compose -f ./docker-compose.yml up -d
